Host: Debian OS

(1) Download source to host OS
$ cd ~/src/
$ git clone https://github.com/zenodo/zenodo.git

(2) Build docker images and containers
docker-compose build

(3) Start docker containers build in step2. This step could be done before step9.
docker-compose up db es cache mq

(4) Check and clean OS default python environment.  Uninstall python2 and keep/install python3 only.

(5) Install 2 python modules: virtualenv and virtualenvwrapper.
pip install virtualenv
pip install virtualenvwrapper

(6) Install nodejs on host os
# Install Node.js 7.x repository
sudo curl -sL https://deb.nodesource.com/setup_7.x | sudo bash -
# Install Node.js and npm
apt-get install -y nodejs

(7) Create virtual python environment
mkdir /home/envs
### Append following 3 lines to the end of ~/.bashrc file, and do "source ~/.bashrc" after saving the file. 
### The path on the 3rd line should be the actual path where virtualenvwrapper.sh is installed.
    export WORKON_HOME=$HOME/.virtualenvs
    export PROJECT_HOME=$HOME/envs
    source /usr/local/bin/virtualenvwrapper.sh
mkvirtualenv zenodo

(8) Build zenodo on host os, this should be done under virtual python environment created in step7.
(zenodo)$
(zenodo)$ cd ~/src/zenodo
(zenodo)$ pip install -r requirements.txt --src ~/src/ --pre --upgrade
(zenodo)$ pip install -e .[all,postgresql,elasticsearch2]
(zenodo)$ sudo ./scripts/setup-npm.sh
# install nodejs modules system-wide. Output when finished:
# /usr/lib
# ├── clean-css@3.4.19 
# ├── node-sass@3.8.0 
# ├── requirejs@2.2.0 
# └── uglify-js@2.7.3 
(zenodo)$ ./scripts/setup-assets.sh

(9) Initialize zenodo:
(zenodo)$ ./scripts/init.sh


